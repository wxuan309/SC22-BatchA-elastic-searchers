{"backend_state":"running","connection_file":"/projects/013ca607-9af4-4b8b-9eb4-c9fa83e65e2d/.local/share/jupyter/runtime/kernel-e8bb7242-7893-495e-ad7b-a6876184142a.json","kernel":"elastic-searchers","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1655241901776,"exec_count":3,"id":"5a9fd4","input":"diabetes.head()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Family_Diabetes</th>\n      <th>highBP</th>\n      <th>PhysicallyActive</th>\n      <th>BMI</th>\n      <th>Smoking</th>\n      <th>Alcohol</th>\n      <th>Sleep</th>\n      <th>SoundSleep</th>\n      <th>RegularMedicine</th>\n      <th>JunkFood</th>\n      <th>Stress</th>\n      <th>BPLevel</th>\n      <th>Pregancies</th>\n      <th>Pdiabetes</th>\n      <th>UriationFreq</th>\n      <th>Diabetic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>50-59</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>yes</td>\n      <td>one hr or more</td>\n      <td>39.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>no</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>high</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>50-59</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>yes</td>\n      <td>less than half an hr</td>\n      <td>28.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>yes</td>\n      <td>very often</td>\n      <td>sometimes</td>\n      <td>normal</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>40-49</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>no</td>\n      <td>one hr or more</td>\n      <td>24.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>no</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>normal</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>50-59</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>no</td>\n      <td>one hr or more</td>\n      <td>23.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>no</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>normal</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>40-49</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>no</td>\n      <td>less than half an hr</td>\n      <td>27.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>8.0</td>\n      <td>8.0</td>\n      <td>no</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>normal</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Age Gender Family_Diabetes highBP      PhysicallyActive   BMI Smoking  \\\n0  50-59   Male              no    yes        one hr or more  39.0      no   \n1  50-59   Male              no    yes  less than half an hr  28.0      no   \n2  40-49   Male              no     no        one hr or more  24.0      no   \n3  50-59   Male              no     no        one hr or more  23.0      no   \n4  40-49   Male              no     no  less than half an hr  27.0      no   \n\n  Alcohol  Sleep  SoundSleep RegularMedicine      JunkFood     Stress BPLevel  \\\n0      no    8.0         6.0              no  occasionally  sometimes    high   \n1      no    8.0         6.0             yes    very often  sometimes  normal   \n2      no    6.0         6.0              no  occasionally  sometimes  normal   \n3      no    8.0         6.0              no  occasionally  sometimes  normal   \n4      no    8.0         8.0              no  occasionally  sometimes  normal   \n\n   Pregancies Pdiabetes UriationFreq Diabetic  \n0         0.0         0     not much       no  \n1         0.0         0     not much       no  \n2         0.0         0     not much       no  \n3         0.0         0     not much       no  \n4         0.0         0     not much       no  "},"exec_count":3}},"pos":6,"scrolled":true,"start":1655241901705,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241901835,"exec_count":4,"id":"267f6c","input":"diabetes.tail()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Family_Diabetes</th>\n      <th>highBP</th>\n      <th>PhysicallyActive</th>\n      <th>BMI</th>\n      <th>Smoking</th>\n      <th>Alcohol</th>\n      <th>Sleep</th>\n      <th>SoundSleep</th>\n      <th>RegularMedicine</th>\n      <th>JunkFood</th>\n      <th>Stress</th>\n      <th>BPLevel</th>\n      <th>Pregancies</th>\n      <th>Pdiabetes</th>\n      <th>UriationFreq</th>\n      <th>Diabetic</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>948</th>\n      <td>60 or older</td>\n      <td>Male</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>more than half an hr</td>\n      <td>27.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>yes</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>high</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>quite often</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>949</th>\n      <td>60 or older</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>yes</td>\n      <td>none</td>\n      <td>23.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>yes</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>high</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>950</th>\n      <td>60 or older</td>\n      <td>Male</td>\n      <td>no</td>\n      <td>yes</td>\n      <td>less than half an hr</td>\n      <td>27.0</td>\n      <td>no</td>\n      <td>yes</td>\n      <td>6.0</td>\n      <td>5.0</td>\n      <td>yes</td>\n      <td>occasionally</td>\n      <td>very often</td>\n      <td>high</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>not much</td>\n      <td>no</td>\n    </tr>\n    <tr>\n      <th>951</th>\n      <td>60 or older</td>\n      <td>Female</td>\n      <td>yes</td>\n      <td>yes</td>\n      <td>one hr or more</td>\n      <td>30.0</td>\n      <td>no</td>\n      <td>no</td>\n      <td>7.0</td>\n      <td>4.0</td>\n      <td>yes</td>\n      <td>occasionally</td>\n      <td>sometimes</td>\n      <td>high</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>quite often</td>\n      <td>yes</td>\n    </tr>\n    <tr>\n      <th>952</th>\n      <td>$$$$$$</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"             Age  Gender Family_Diabetes highBP      PhysicallyActive   BMI  \\\n948  60 or older    Male             yes    yes  more than half an hr  27.0   \n949  60 or older    Male              no    yes                  none  23.0   \n950  60 or older    Male              no    yes  less than half an hr  27.0   \n951  60 or older  Female             yes    yes        one hr or more  30.0   \n952       $$$$$$     NaN             NaN    NaN                   NaN   NaN   \n\n    Smoking Alcohol  Sleep  SoundSleep RegularMedicine      JunkFood  \\\n948      no      no    6.0         5.0             yes  occasionally   \n949      no      no    6.0         5.0             yes  occasionally   \n950      no     yes    6.0         5.0             yes  occasionally   \n951      no      no    7.0         4.0             yes  occasionally   \n952     NaN     NaN    NaN         NaN             NaN           NaN   \n\n         Stress BPLevel  Pregancies Pdiabetes UriationFreq Diabetic  \n948   sometimes    high         0.0         0  quite often      yes  \n949   sometimes    high         0.0         0     not much       no  \n950  very often    high         0.0         0     not much       no  \n951   sometimes    high         2.0         0  quite often      yes  \n952         NaN     NaN         NaN       NaN          NaN      NaN  "},"exec_count":4}},"pos":7,"scrolled":true,"start":1655241901809,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241901872,"exec_count":5,"id":"0653c0","input":"print(diabetes.columns)\nprint(\"\")\nprint(diabetes.shape)","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"name":"stdout","text":"Index(['Age', 'Gender', 'Family_Diabetes', 'highBP', 'PhysicallyActive', 'BMI',\n       'Smoking', 'Alcohol', 'Sleep', 'SoundSleep', 'RegularMedicine',\n       'JunkFood', 'Stress', 'BPLevel', 'Pregancies', 'Pdiabetes',\n       'UriationFreq', 'Diabetic'],\n      dtype='object')\n\n(953, 18)\n"}},"pos":8,"start":1655241901870,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241901906,"exec_count":6,"id":"91873a","input":"diabetes.info()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 953 entries, 0 to 952\nData columns (total 18 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   Age               953 non-null    object \n 1   Gender            952 non-null    object \n 2   Family_Diabetes   952 non-null    object \n 3   highBP            952 non-null    object \n 4   PhysicallyActive  952 non-null    object \n 5   BMI               948 non-null    float64\n 6   Smoking           952 non-null    object \n 7   Alcohol           952 non-null    object \n 8   Sleep             952 non-null    float64\n 9   SoundSleep        952 non-null    float64\n 10  RegularMedicine   952 non-null    object \n 11  JunkFood          952 non-null    object \n 12  Stress            952 non-null    object \n 13  BPLevel           952 non-null    object \n 14  Pregancies        910 non-null    float64\n 15  Pdiabetes         951 non-null    object \n 16  UriationFreq      952 non-null    object \n 17  Diabetic          951 non-null    object \ndtypes: float64(4), object(14)\nmemory usage: 134.1+ KB\n"}},"pos":9,"start":1655241901895,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241901921,"exec_count":7,"id":"3e5915","input":"diabetes[diabetes['Age'].isnull()]","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Family_Diabetes</th>\n      <th>highBP</th>\n      <th>PhysicallyActive</th>\n      <th>BMI</th>\n      <th>Smoking</th>\n      <th>Alcohol</th>\n      <th>Sleep</th>\n      <th>SoundSleep</th>\n      <th>RegularMedicine</th>\n      <th>JunkFood</th>\n      <th>Stress</th>\n      <th>BPLevel</th>\n      <th>Pregancies</th>\n      <th>Pdiabetes</th>\n      <th>UriationFreq</th>\n      <th>Diabetic</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>","text/plain":"Empty DataFrame\nColumns: [Age, Gender, Family_Diabetes, highBP, PhysicallyActive, BMI, Smoking, Alcohol, Sleep, SoundSleep, RegularMedicine, JunkFood, Stress, BPLevel, Pregancies, Pdiabetes, UriationFreq, Diabetic]\nIndex: []"},"exec_count":7}},"pos":10,"start":1655241901909,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241901934,"exec_count":8,"id":"d141a6","input":"diabetes['Age'].isnull()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"text/plain":"0      False\n1      False\n2      False\n3      False\n4      False\n       ...  \n948    False\n949    False\n950    False\n951    False\n952    False\nName: Age, Length: 953, dtype: bool"},"exec_count":8}},"pos":11,"start":1655241901926,"state":"done","type":"cell"}
{"cell_type":"code","end":1655241902237,"exec_count":9,"id":"4edca4","input":"#the relationship between pregnancies and glucose levels\nimport plotly.express as px\nfig = px.scatter(diabetes, x=\"Gender\", y=\"Age\",color=\"BMI\",\n            title=\" Age, Gender and Body Mass Index of Diabetic Patitents\")\nfig.show()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"iframe":"f44e736531ca7c011cbc027d369106ffb1accaf7"}}},"pos":15,"start":1655241901937,"state":"done","type":"cell"}
{"cell_type":"code","end":1655242148660,"exec_count":26,"id":"58ef44","input":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport statistics\nimport plotly.express as px\nfrom sklearn import svm","kernel":"elastic-searchers","pos":1,"start":1655242148648,"state":"done","type":"cell"}
{"cell_type":"code","end":1655242210252,"exec_count":37,"id":"2d114d","input":"# Stress always and Quality Sleep\ndf = diabetes\nfig = px.violin(df, x=\"Stress_always\", y=\"SoundSleep\", color= \"Diabetic_yes\", title=\"Quality sleep in relation to stress\")\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"7796574223e9fc6fdd5e35c02b28ea6c4858b0d2"}}},"pos":18,"start":1655242210125,"state":"done","type":"cell"}
{"cell_type":"code","end":1655242388406,"exec_count":51,"id":"17acd4","input":"#possible pie chart","kernel":"elastic-searchers","pos":16,"start":1655242388401,"state":"done","type":"cell"}
{"cell_type":"code","end":1655242479587,"exec_count":54,"id":"72d4e4","input":"# BMI and Age\ndf= diabetes\nfig = px.scatter(df, x=\"BMI\", y=\"Age\", color=\"highBP\")\n\nfig.update_layout(\n    title=\"\",)\n\nfig.show()","kernel":"elastic-searchers","output":{"0":{"ename":"ValueError","evalue":"Value of 'color' is not the name of a column in 'data_frame'. Expected one of ['Age', 'BMI', 'Sleep', 'SoundSleep', 'Pregancies', 'Gender_Female', 'Gender_Male', 'Family_Diabetes_no', 'Family_Diabetes_yes', 'highBP_no', 'highBP_yes', 'PhysicallyActive_less than half an hr', 'PhysicallyActive_more than half an hr', 'PhysicallyActive_none', 'PhysicallyActive_one hr or more', 'Smoking_no', 'Smoking_yes', 'Alcohol_no', 'Alcohol_yes', 'RegularMedicine_no', 'RegularMedicine_o', 'RegularMedicine_yes', 'JunkFood_always', 'JunkFood_occasionally', 'JunkFood_often', 'JunkFood_very often', 'Stress_always', 'Stress_not at all', 'Stress_sometimes', 'Stress_very often', 'BPLevel_High', 'BPLevel_Low', 'BPLevel_high', 'BPLevel_low', 'BPLevel_normal', 'BPLevel_normal ', 'Pdiabetes_0', 'Pdiabetes_yes', 'UriationFreq_not much', 'UriationFreq_quite often', 'Diabetic_ no', 'Diabetic_no', 'Diabetic_yes'] but received: highBP","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [54]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# BMI and Age\u001b[39;00m\n\u001b[1;32m      2\u001b[0m df\u001b[38;5;241m=\u001b[39m diabetes\n\u001b[0;32m----> 3\u001b[0m fig \u001b[38;5;241m=\u001b[39m \u001b[43mpx\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mBMI\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mAge\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mhighBP\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      5\u001b[0m fig\u001b[38;5;241m.\u001b[39mupdate_layout(\n\u001b[1;32m      6\u001b[0m     title\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,)\n\u001b[1;32m      8\u001b[0m fig\u001b[38;5;241m.\u001b[39mshow()\n","File \u001b[0;32m~/miniconda3/lib/python3.9/site-packages/plotly/express/_chart_types.py:66\u001b[0m, in \u001b[0;36mscatter\u001b[0;34m(data_frame, x, y, color, symbol, size, hover_name, hover_data, custom_data, text, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, orientation, color_discrete_sequence, color_discrete_map, color_continuous_scale, range_color, color_continuous_midpoint, symbol_sequence, symbol_map, opacity, size_max, marginal_x, marginal_y, trendline, trendline_options, trendline_color_override, trendline_scope, log_x, log_y, range_x, range_y, render_mode, title, template, width, height)\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mscatter\u001b[39m(\n\u001b[1;32m     13\u001b[0m     data_frame\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     14\u001b[0m     x\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     60\u001b[0m     height\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m     61\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m go\u001b[38;5;241m.\u001b[39mFigure:\n\u001b[1;32m     62\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     63\u001b[0m \u001b[38;5;124;03m    In a scatter plot, each row of `data_frame` is represented by a symbol\u001b[39;00m\n\u001b[1;32m     64\u001b[0m \u001b[38;5;124;03m    mark in 2D space.\u001b[39;00m\n\u001b[1;32m     65\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m---> 66\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mmake_figure\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mlocals\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgo\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mScatter\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/lib/python3.9/site-packages/plotly/express/_core.py:1948\u001b[0m, in \u001b[0;36mmake_figure\u001b[0;34m(args, constructor, trace_patch, layout_patch)\u001b[0m\n\u001b[1;32m   1945\u001b[0m layout_patch \u001b[38;5;241m=\u001b[39m layout_patch \u001b[38;5;129;01mor\u001b[39;00m {}\n\u001b[1;32m   1946\u001b[0m apply_default_cascade(args)\n\u001b[0;32m-> 1948\u001b[0m args \u001b[38;5;241m=\u001b[39m \u001b[43mbuild_dataframe\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconstructor\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1949\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m constructor \u001b[38;5;129;01min\u001b[39;00m [go\u001b[38;5;241m.\u001b[39mTreemap, go\u001b[38;5;241m.\u001b[39mSunburst, go\u001b[38;5;241m.\u001b[39mIcicle] \u001b[38;5;129;01mand\u001b[39;00m args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpath\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1950\u001b[0m     args \u001b[38;5;241m=\u001b[39m process_dataframe_hierarchy(args)\n","File \u001b[0;32m~/miniconda3/lib/python3.9/site-packages/plotly/express/_core.py:1405\u001b[0m, in \u001b[0;36mbuild_dataframe\u001b[0;34m(args, constructor)\u001b[0m\n\u001b[1;32m   1402\u001b[0m     args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcolor\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1403\u001b[0m \u001b[38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`\u001b[39;00m\n\u001b[0;32m-> 1405\u001b[0m df_output, wide_id_vars \u001b[38;5;241m=\u001b[39m \u001b[43mprocess_args_into_dataframe\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1406\u001b[0m \u001b[43m    \u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwide_mode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvar_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue_name\u001b[49m\n\u001b[1;32m   1407\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1409\u001b[0m \u001b[38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete\u001b[39;00m\n\u001b[1;32m   1410\u001b[0m \u001b[38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating\u001b[39;00m\n\u001b[1;32m   1411\u001b[0m \u001b[38;5;66;03m# df_output\u001b[39;00m\n\u001b[1;32m   1413\u001b[0m count_name \u001b[38;5;241m=\u001b[39m _escape_col_name(df_output, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcount\u001b[39m\u001b[38;5;124m\"\u001b[39m, [var_name, value_name])\n","File \u001b[0;32m~/miniconda3/lib/python3.9/site-packages/plotly/express/_core.py:1207\u001b[0m, in \u001b[0;36mprocess_args_into_dataframe\u001b[0;34m(args, wide_mode, var_name, value_name)\u001b[0m\n\u001b[1;32m   1205\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m argument \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mindex\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m   1206\u001b[0m             err_msg \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m To use the index, pass it in directly as `df.index`.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1207\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(err_msg)\n\u001b[1;32m   1208\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m length \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(df_input[argument]) \u001b[38;5;241m!=\u001b[39m length:\n\u001b[1;32m   1209\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m   1210\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAll arguments should have the same length. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1211\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe length of column argument `df[\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m]` is \u001b[39m\u001b[38;5;132;01m%d\u001b[39;00m\u001b[38;5;124m, whereas the \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1218\u001b[0m         )\n\u001b[1;32m   1219\u001b[0m     )\n","\u001b[0;31mValueError\u001b[0m: Value of 'color' is not the name of a column in 'data_frame'. Expected one of ['Age', 'BMI', 'Sleep', 'SoundSleep', 'Pregancies', 'Gender_Female', 'Gender_Male', 'Family_Diabetes_no', 'Family_Diabetes_yes', 'highBP_no', 'highBP_yes', 'PhysicallyActive_less than half an hr', 'PhysicallyActive_more than half an hr', 'PhysicallyActive_none', 'PhysicallyActive_one hr or more', 'Smoking_no', 'Smoking_yes', 'Alcohol_no', 'Alcohol_yes', 'RegularMedicine_no', 'RegularMedicine_o', 'RegularMedicine_yes', 'JunkFood_always', 'JunkFood_occasionally', 'JunkFood_often', 'JunkFood_very often', 'Stress_always', 'Stress_not at all', 'Stress_sometimes', 'Stress_very often', 'BPLevel_High', 'BPLevel_Low', 'BPLevel_high', 'BPLevel_low', 'BPLevel_normal', 'BPLevel_normal ', 'Pdiabetes_0', 'Pdiabetes_yes', 'UriationFreq_not much', 'UriationFreq_quite often', 'Diabetic_ no', 'Diabetic_no', 'Diabetic_yes'] but received: highBP"]}},"pos":19,"start":1655242479429,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":36,"id":"87caff","input":"#BMI, age, diabetic\ndf = diabetes\nfig = px.bar(df, x=\"Diabetic_yes\", y=\"BMI\", barmode=\"group\", color = \"Age\", title=\"BMI in Diabetics and Non-Diabetics relating to age group\")\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"53db583abf48a706c151adbd534cb13434114bcd"}}},"pos":17,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":0,"id":"d00e1f","input":"### Data Cleaning\n\n","pos":20,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"52caef","input":"### Exploratory Data Analysis\n\n","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bf3b77","input":"### Model fitting","pos":25,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c7b61a","input":"### Load Dataset\n\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e6a36a","input":"### Exploratory Data Analysis 2\n\n","pos":24.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f699ca","input":"### Import Packages\n\n","pos":0,"state":"done","type":"cell"}
{"end":1655241906967,"exec_count":23,"id":"52ec3a","input":"df = diabetes\nfig = px.bar(df, x=\"Diabetic_yes\", y=\"BMI\", barmode='group', color = \"Diabetic_yes\", height=400, title='BMI of diabetics compared to non-diabetics')\nfig.show()","kernel":"elastic-searchers","no_halt":true,"output":{"0":{"data":{"iframe":"36d6a38441d4ed6f9fb346dd2ceec86029677052"}}},"pos":24.75,"start":1655241906908,"state":"done","type":"cell"}
{"end":1655242153654,"exec_count":27,"id":"d5c7e5","input":"diabetes = pd.read_csv(\"./Data/diabetes_dataset__2019.csv\")","kernel":"elastic-searchers","pos":5.5,"start":1655242153637,"state":"done","type":"cell"}
{"end":1655242178922,"exec_count":29,"id":"6915a7","input":"#cleaning the data -- dropping missing and duplicate values for sanity\ndiabetes.dropna(inplace = True)\ndiabetes.drop_duplicates(inplace = True)\ndiabetes = diabetes.reset_index(drop=True)\n\nlength = len(diabetes.index) #save length of array of later","kernel":"elastic-searchers","pos":21,"start":1655242178907,"state":"done","type":"cell"}
{"end":1655242181451,"exec_count":30,"id":"6493bf","input":"#replacing categorical variables\ncol_category = ['Gender','Family_Diabetes','highBP','PhysicallyActive','Smoking','Alcohol','RegularMedicine','JunkFood','Stress','BPLevel','Pdiabetes','UriationFreq','Diabetic',]\nfor col in col_category:\n    diabetes = pd.concat([diabetes.drop(col, axis=1), pd.get_dummies(diabetes[col], prefix=col, prefix_sep='_')], axis=1)","kernel":"elastic-searchers","pos":22,"start":1655242181425,"state":"done","type":"cell"}
{"end":1655242184838,"exec_count":32,"id":"c816ab","input":"X = diabetes[\"BMI\"].to_numpy().reshape(-1, 1)\ny = diabetes[\"Pdiabetes_yes\"].to_numpy().reshape(-1, 1)","kernel":"elastic-searchers","pos":20.5,"start":1655242184825,"state":"done","type":"cell"}
{"end":1655242190073,"exec_count":33,"id":"45bb54","input":"# Checking for Missing Data\nif X.shape[0] != y.shape[0]:\n    print(\"It looks like you have missing data. You may want to preprocess your data more with pandas to delete any rows with missing, NaN, N/A, and null values.\")\n\nidx = np.arange(length) #shuffle our dataset indices so we don't always split the same way!\nnp.random.shuffle(idx)\n\n#split our data with 80% for training (learning) and 20% for testing.\nsplit_threshold = int(length * 0.8)\n\ntrain_idx = idx[:split_threshold]\n# Uses the remaining indices for testing\ntest_idx = idx[split_threshold:]\n\n# Generates train and test sets and formats them for training.\nx_train, y_train = X[train_idx], y[train_idx]\nx_test, y_test = X[test_idx], y[test_idx]\nx_train= x_train.reshape(-1, 1)\ny_train= y_train.reshape(-1, 1)\nx_test = x_test.reshape(-1, 1)","kernel":"elastic-searchers","pos":23,"start":1655242190056,"state":"done","type":"cell"}
{"end":1655242195126,"exec_count":34,"id":"556e15","input":"#let's plot our split data to see how it looks!\nplt.figure(figsize=(10,5))\n\n# plot the train set \nplt.subplot(1,2,1)\nplt.scatter(x_train,y_train, c='red')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Train')\nplt.grid('on')\n\n\n\n# plot the test set \nplt.subplot(1,2,2)\nplt.scatter(x_test, y_test)  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\n\nplt.show()","kernel":"elastic-searchers","output":{"0":{"data":{"image/png":"0b5a4658fbecca65ab1aaacb322f55ce5370f847","text/plain":"<Figure size 720x360 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":24,"start":1655242194571,"state":"done","type":"cell"}
{"end":1655242217448,"exec_count":38,"id":"9a51ee","input":"# Stress always and Quality Sleep\ndf = diabetes\nfig = px.violin(df, x=\"Stress_not at all\", y=\"SoundSleep\", color= \"Diabetic_yes\", title=\"Quality sleep in relation to stress\")\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"2d060bc92c05d43f69eb747792a0a4e36c8e3b56"}}},"pos":18.5,"start":1655242217310,"state":"done","type":"cell"}
{"end":1655242221564,"exec_count":41,"id":"dc63a9","input":"# BMI and Gender\ndf= diabetes\nfig = px.bar(df, x=\"BMI\", y=\"Gender_Male\", color=\"Gender_Male\")\n\nfig.update_layout(\n    title=\"BMI of Males\",)\n\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"4bf9b7bae967c9018ce2a0dcf970964e7564b619"}}},"pos":19.75,"start":1655242221479,"state":"done","type":"cell"}
{"end":1655242278229,"exec_count":46,"id":"89c8b4","input":"# BMI and Age\ndf= diabetes\nfig = px.scatter(df, x=\"Sleep\", y=\"Age\", color=\"Age\")\n\nfig.update_layout(\n    title=\"Sleep concived through different Age categories\",)\n\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"0a1095bf86b4ce9a291f7591bde862a4e4c5d67e"}}},"pos":19.875,"start":1655242278148,"state":"done","type":"cell"}
{"end":1655242438794,"exec_count":53,"id":"d3a58e","input":"# Gender and BMI\ndf= diabetes\nfig = px.bar(df, x=\"BMI\", y=\"Gender_Female\", color=\"BMI\")\n\nfig.update_layout(\n    title=\"Gender and Body Mass Index\",)\n\nfig.show()","kernel":"elastic-searchers","output":{"0":{"data":{"iframe":"17f479c978f8fa553856486135dcdf9263463d52"}}},"pos":19.5,"start":1655242438585,"state":"done","type":"cell"}
{"end":1655242801762,"exec_count":56,"id":"4756a3","input":"# Predicting using SKLearn\ny_hat = linr.predict(x_test)","kernel":"elastic-searchers","pos":30,"start":1655242801759,"state":"done","type":"cell"}
{"end":1655242804556,"exec_count":57,"id":"2ffd6a","input":"#plotting results\nplt.figure(figsize=(10,5))\nplt.plot(x_test, y_hat, '--')\n\nplt.scatter(x_test,y_test, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\nplt.show()","kernel":"elastic-searchers","output":{"0":{"data":{"image/png":"2b10c0d0a4622f71dc051d5e3a494a854f35785c","text/plain":"<Figure size 720x360 with 1 Axes>"},"metadata":{"needs_background":"light"}}},"pos":31,"start":1655242804207,"state":"done","type":"cell"}
{"end":1655242918301,"exec_count":59,"id":"cc7811","input":"from sklearn.linear_model import LogisticRegression\n#Create the model object\nlinr = LogisticRegression()\n#Fit (train) the model -- this is where the ML happens!\nlinr.fit(x_train, y_train)","kernel":"elastic-searchers","output":{"0":{"name":"stderr","text":"/projects/013ca607-9af4-4b8b-9eb4-c9fa83e65e2d/miniconda3/lib/python3.9/site-packages/sklearn/utils/validation.py:1111: DataConversionWarning:\n\nA column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n\n"},"1":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>","text/plain":"LogisticRegression()"},"exec_count":59}},"pos":29,"start":1655242918287,"state":"done","type":"cell"}
{"end":1655242919246,"exec_count":60,"id":"63d4bb","input":"linr.score(x_test, y_test)","kernel":"elastic-searchers","output":{"0":{"data":{"text/plain":"0.9649122807017544"},"exec_count":60}},"pos":29.5,"start":1655242919238,"state":"done","type":"cell"}
{"end":1655242995460,"exec_count":62,"id":"2110ea","input":"len(x_test)","kernel":"elastic-searchers","output":{"0":{"data":{"text/plain":"57"},"exec_count":62}},"pos":24.9375,"start":1655242995432,"state":"done","type":"cell"}
{"end":1655243000493,"exec_count":63,"id":"3f15a1","input":"len(y_test)","kernel":"elastic-searchers","output":{"0":{"data":{"text/plain":"57"},"exec_count":63}},"pos":24.875,"start":1655243000480,"state":"done","type":"cell"}
{"end":1655243182215,"exec_count":65,"id":"9d7108","input":"from sklearn import svm\nclf = svm.SVC()\nclf.fit(x_train,y_train)\nclf.score(x_test, y_test.ravel())","kernel":"elastic-searchers","output":{"0":{"name":"stderr","text":"/projects/013ca607-9af4-4b8b-9eb4-c9fa83e65e2d/miniconda3/lib/python3.9/site-packages/sklearn/utils/validation.py:1111: DataConversionWarning:\n\nA column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n\n"},"1":{"data":{"text/plain":"0.9649122807017544"},"exec_count":65}},"pos":26,"start":1655243182193,"state":"done","type":"cell"}
{"id":"15f99e","input":"","pos":32,"type":"cell"}
{"id":"2c08f4","input":"W","pos":27,"type":"cell"}
{"id":"7f19c6","input":"Okay ","pos":28,"type":"cell"}
{"id":"9e5336","input":"","pos":20.75,"type":"cell"}
{"id":"f82531","input":"","kernel":"elastic-searchers","pos":11.5,"type":"cell"}
{"id":0,"time":1655243360704,"type":"user"}
{"last_load":1655238887126,"type":"file"}